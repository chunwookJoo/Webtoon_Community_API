{"version":3,"file":"static/js/936.02d44b2b.chunk.js","mappings":"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","sources":["pages/RegistPage.js","pages/regist/NaverRegist.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Input, Select } from \"@mantine/core\";\r\nimport { showNotification } from \"@mantine/notifications\";\r\nimport { IconCheck, IconX } from \"@tabler/icons\";\r\n// import { Select } from \"@mantine/core\";\r\nimport { ReactComponent as Logo } from \"../assets/img/logo.svg\";\r\nimport \"../assets/scss/pages/registPage.scss\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../config\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { jwtTokenState, userInfoState } from \"../utils/atom\";\r\n\r\nconst AGE_RANGE = [\r\n\t{ value: \"10~19\", label: \"10대\" },\r\n\t{ value: \"20~29\", label: \"20대\" },\r\n\t{ value: \"30~39\", label: \"30대\" },\r\n\t{ value: \"40~49\", label: \"40대\" },\r\n\t{ value: \"50~59\", label: \"50대\" },\r\n\t{ value: \"60~69\", label: \"60대\" },\r\n];\r\n\r\nconst GENDER = [\r\n\t{ value: \"male\", label: \"남자\" },\r\n\t{ value: \"female\", label: \"여자\" },\r\n];\r\n\r\nconst RegistPage = (props) => {\r\n\tconst navigate = useNavigate();\r\n\tconst nicknameInput = useRef();\r\n\tconst { platform, account, token, id } = props;\r\n\r\n\tconst email = account.email;\r\n\tconst profileImage =\r\n\t\tplatform === \"kakao\"\r\n\t\t\t? account.profile.thumbnail_image_url\r\n\t\t\t: account.profile_image;\r\n\tconst [ageRange, setAgeRange] = useState(\r\n\t\tplatform === \"kakao\" ? account.age_range : account.age.replace(\"-\", \"~\"),\r\n\t);\r\n\tconst [gender, setGender] = useState(\r\n\t\taccount.gender === \"M\" || account.gender === \"male\" ? \"male\" : \"female\",\r\n\t);\r\n\r\n\t/**\r\n\t * 공통으로 쓰이는 state\r\n\t */\r\n\tconst [jwtToken, setJwtToken] = useRecoilState(jwtTokenState);\r\n\tconst [userInfo, setUserInfo] = useRecoilState(userInfoState);\r\n\tconst [nickName, setNickName] = useState(\"\");\r\n\tconst [nicknameChecked, setNicknameChecked] = useState(\"empty\");\r\n\r\n\tconst onChangeHandler = (e, state) => {\r\n\t\tif (state === \"nickname\") setNickName(e.target.value);\r\n\t\telse if (state === \"age\") setAgeRange(e);\r\n\t\telse if (state === \"gender\") setGender(e);\r\n\t};\r\n\r\n\tconst nicknameBody = {\r\n\t\tnickname: nickName,\r\n\t};\r\n\r\n\tconst onClickNicknameCheck = () => {\r\n\t\tif (nickName === \"\") {\r\n\t\t\tsetNicknameChecked(\"empty\");\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\taxios\r\n\t\t\t\t.post(API_URL + \"/auth/nickname/check\", nicknameBody)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (response.data.RESULT === 200) {\r\n\t\t\t\t\t\tsetNicknameChecked(\"available\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else if (response.data.RESULT === 403) {\r\n\t\t\t\t\t\tsetNicknameChecked(\"unavailable\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst kakaoBody = {\r\n\t\tkakaoToken: token,\r\n\t\tid,\r\n\t\temail,\r\n\t\tprofileImage,\r\n\t\tnickname: nickName,\r\n\t\tage: ageRange,\r\n\t\tgender,\r\n\t};\r\n\r\n\tconst naverBody = {\r\n\t\tnaverToken: token,\r\n\t\tid,\r\n\t\temail,\r\n\t\tprofileImage,\r\n\t\tnickname: nickName,\r\n\t\tage: ageRange,\r\n\t\tgender,\r\n\t};\r\n\r\n\tconst onClickSignup = (e, platform) => {\r\n\t\tif (nicknameChecked === \"available\") {\r\n\t\t\tif (platform === \"kakao\") {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.post(API_URL + \"/auth/kakaoSignUp\", kakaoBody)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tif (response.data.RESULT === 200) {\r\n\t\t\t\t\t\t\tsetJwtToken(response.data.jwtToken);\r\n\t\t\t\t\t\t\tsetUserInfo(response.data.user_data);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"Authentication\", response.data.jwtToken);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"userId\", response.data.user_data.id);\r\n\t\t\t\t\t\t\tnavigate(\"/\");\r\n\t\t\t\t\t\t\tshowNotification({\r\n\t\t\t\t\t\t\t\tmessage: \"정상적으로 회원가입되었습니다.\",\r\n\t\t\t\t\t\t\t\tautoClose: 2000,\r\n\t\t\t\t\t\t\t\tradius: \"md\",\r\n\t\t\t\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t} else if (platform === \"naver\") {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.post(API_URL + \"/auth/naverSignUp\", naverBody)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tif (response.data.RESULT === 200) {\r\n\t\t\t\t\t\t\tsetJwtToken(response.data.jwtToken);\r\n\t\t\t\t\t\t\tsetUserInfo(response.data.user_data);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"Authentication\", response.data.jwtToken);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"userId\", response.data.user_data.id);\r\n\t\t\t\t\t\t\tnavigate(\"/\");\r\n\t\t\t\t\t\t\tshowNotification({\r\n\t\t\t\t\t\t\t\tmessage: \"정상적으로 회원가입되었습니다.\",\r\n\t\t\t\t\t\t\t\tautoClose: 2000,\r\n\t\t\t\t\t\t\t\tradius: \"md\",\r\n\t\t\t\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnicknameInput.current.focus();\r\n\t\t\tshowNotification({\r\n\t\t\t\tmessage: \"닉네임 중복체크를 해주세요.\",\r\n\t\t\t\tautoClose: 2000,\r\n\t\t\t\tradius: \"md\",\r\n\t\t\t\tcolor: \"red\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"regist-container\">\r\n\t\t\t<div className=\"regist-form-group\">\r\n\t\t\t\t<div className=\"regist-title\">\r\n\t\t\t\t\t<Logo />\r\n\t\t\t\t\t<h3>회원가입</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"regist-form\">\r\n\t\t\t\t\t<div className=\"regist-input\">\r\n\t\t\t\t\t\t<Input.Wrapper label=\"이메일\" required>\r\n\t\t\t\t\t\t\t<Input defaultValue={account.email} disabled />\r\n\t\t\t\t\t\t</Input.Wrapper>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"regist-input\">\r\n\t\t\t\t\t\t<Input.Wrapper label=\"닉네임\" required>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<span style={{ fontSize: \"12px\" }}>({nickName.length}/8자)</span>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tmaxLength={8}\r\n\t\t\t\t\t\t\t\tplaceholder=\"닉네임을 입력하세요.\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChangeHandler(e, \"nickname\")}\r\n\t\t\t\t\t\t\t\tdefaultValue={nickName}\r\n\t\t\t\t\t\t\t\tref={nicknameInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Input.Wrapper>\r\n\t\t\t\t\t\t<div className=\"nickname-check\">\r\n\t\t\t\t\t\t\t{nicknameChecked === \"empty\" ? (\r\n\t\t\t\t\t\t\t\t<span className=\"unavailable\">닉네임을 입력해주세요.</span>\r\n\t\t\t\t\t\t\t) : nicknameChecked === \"available\" ? (\r\n\t\t\t\t\t\t\t\t<span className=\"available\">사용할 수 있는 닉네임입니다.</span>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<span className=\"unavailable\">이미 사용중인 닉네임입니다.</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<button onClick={(e) => onClickNicknameCheck(e)}>중복체크</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"regist-input\">\r\n\t\t\t\t\t\t<Input.Wrapper label=\"나이\" required>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tplaceholder=\"본인 연령대를 선택하세요.\"\r\n\t\t\t\t\t\t\t\tdata={AGE_RANGE}\r\n\t\t\t\t\t\t\t\tdefaultValue={ageRange}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChangeHandler(e, \"age\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Input.Wrapper>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"regist-input\">\r\n\t\t\t\t\t\t<Input.Wrapper label=\"성별\" required>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tplaceholder=\"성별을 선택하세요.\"\r\n\t\t\t\t\t\t\t\tdata={GENDER}\r\n\t\t\t\t\t\t\t\tdefaultValue={gender}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChangeHandler(e, \"gender\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Input.Wrapper>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"regist-btn\">\r\n\t\t\t\t\t<button onClick={(e) => onClickSignup(e, platform)}>\r\n\t\t\t\t\t\t회원가입하기\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RegistPage;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport RegistPage from \"../RegistPage\";\r\n\r\nconst NaverRegist = () => {\r\n\tconst { state } = useLocation();\r\n\tconst naverAccount = state.data;\r\n\tconst platform = state.platform;\r\n\r\n\t/**\r\n\t * 네이버 액세스 토큰\r\n\t * 네이버 회원 정보\r\n\t */\r\n\tconst naverToken = naverAccount.access_token;\r\n\tconst naverId = naverAccount.id;\r\n\r\n\treturn (\r\n\t\t<RegistPage\r\n\t\t\tplatform={platform}\r\n\t\t\taccount={naverAccount}\r\n\t\t\ttoken={naverToken}\r\n\t\t\tid={naverId}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default NaverRegist;\r\n"],"names":["AGE_RANGE","value","label","GENDER","props","navigate","useNavigate","nicknameInput","useRef","platform","account","token","id","email","profileImage","profile","thumbnail_image_url","profile_image","useState","age_range","age","replace","ageRange","setAgeRange","gender","setGender","useRecoilState","jwtTokenState","setJwtToken","userInfoState","setUserInfo","nickName","setNickName","nicknameChecked","setNicknameChecked","onChangeHandler","e","state","target","nicknameBody","nickname","kakaoBody","kakaoToken","naverBody","naverToken","className","Input","I","required","defaultValue","disabled","style","fontSize","length","maxLength","placeholder","onChange","ref","onClick","axios","API_URL","then","response","data","RESULT","Select","jwtToken","user_data","localStorage","setItem","showNotification","message","autoClose","radius","color","current","focus","onClickSignup","useLocation","naverAccount","access_token","naverId"],"sourceRoot":""}