{"version":3,"file":"static/js/98.e2e12b7c.chunk.js","mappings":"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","sources":["pages/RegistPage.jsx","pages/regist/NaverRegist.jsx"],"sourcesContent":["// npm package\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// api\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../config\";\r\n\r\n// design library (mantine)\r\nimport { Input, Select } from \"@mantine/core\";\r\nimport { showNotification } from \"@mantine/notifications\";\r\n\r\n// recoil\r\nimport { useRecoilState } from \"recoil\";\r\nimport { jwtTokenState, userInfoState } from \"../store/recoilAuthState\";\r\n\r\n// components\r\nimport { ReactComponent as Logo } from \"../assets/img/logo.svg\";\r\n\r\n// hooks\r\n// icon\r\nimport \"../assets/scss/pages/registPage.scss\";\r\n\r\nconst AGE_RANGE = [\r\n\t{ value: \"10~19\", label: \"10대\" },\r\n\t{ value: \"20~29\", label: \"20대\" },\r\n\t{ value: \"30~39\", label: \"30대\" },\r\n\t{ value: \"40~49\", label: \"40대\" },\r\n\t{ value: \"50~59\", label: \"50대\" },\r\n\t{ value: \"60~69\", label: \"60대\" },\r\n];\r\n\r\nconst GENDER = [\r\n\t{ value: \"male\", label: \"남자\" },\r\n\t{ value: \"female\", label: \"여자\" },\r\n];\r\n\r\nconst RegistPage = (props) => {\r\n\tconst navigate = useNavigate();\r\n\tconst nicknameInput = useRef();\r\n\tconst { platform, account, token, id } = props;\r\n\r\n\tconst email = account.email;\r\n\tconst profileImage =\r\n\t\tplatform === \"kakao\"\r\n\t\t\t? account.profile.thumbnail_image_url\r\n\t\t\t: account.profile_image;\r\n\tconst [ageRange, setAgeRange] = useState(\r\n\t\tplatform === \"kakao\" ? account.age_range : account.age.replace(\"-\", \"~\"),\r\n\t);\r\n\tconst [gender, setGender] = useState(\r\n\t\taccount.gender === \"M\" || account.gender === \"male\" ? \"male\" : \"female\",\r\n\t);\r\n\r\n\t/**\r\n\t * 공통으로 쓰이는 state\r\n\t */\r\n\tconst [jwtToken, setJwtToken] = useRecoilState(jwtTokenState);\r\n\tconst [userInfo, setUserInfo] = useRecoilState(userInfoState);\r\n\tconst [nickName, setNickName] = useState(\"\");\r\n\tconst [nicknameChecked, setNicknameChecked] = useState(\"empty\");\r\n\r\n\tconst onChangeHandler = (e, state) => {\r\n\t\tif (state === \"nickname\") setNickName(e.target.value);\r\n\t\telse if (state === \"age\") setAgeRange(e);\r\n\t\telse if (state === \"gender\") setGender(e);\r\n\t};\r\n\r\n\tconst nicknameBody = {\r\n\t\tnickname: nickName,\r\n\t};\r\n\r\n\tconst onClickNicknameCheck = () => {\r\n\t\tif (nickName === \"\") {\r\n\t\t\tsetNicknameChecked(\"empty\");\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\taxios\r\n\t\t\t\t.post(API_URL + \"/auth/nickname/check\", nicknameBody)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (response.data.RESULT === 200) {\r\n\t\t\t\t\t\tsetNicknameChecked(\"available\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else if (response.data.RESULT === 403) {\r\n\t\t\t\t\t\tsetNicknameChecked(\"unavailable\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst kakaoBody = {\r\n\t\tkakaoToken: token,\r\n\t\tid,\r\n\t\temail,\r\n\t\tprofileImage,\r\n\t\tnickname: nickName,\r\n\t\tage: ageRange,\r\n\t\tgender,\r\n\t};\r\n\r\n\tconst naverBody = {\r\n\t\tnaverToken: token,\r\n\t\tid,\r\n\t\temail,\r\n\t\tprofileImage,\r\n\t\tnickname: nickName,\r\n\t\tage: ageRange,\r\n\t\tgender,\r\n\t};\r\n\r\n\tconst onClickSignup = (e, platform) => {\r\n\t\tif (nicknameChecked === \"available\") {\r\n\t\t\tif (platform === \"kakao\") {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.post(API_URL + \"/auth/kakaoSignUp\", kakaoBody)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tif (response.data.RESULT === 200) {\r\n\t\t\t\t\t\t\tsetJwtToken(response.data.jwtToken);\r\n\t\t\t\t\t\t\tsetUserInfo(response.data.user_data);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"Authentication\", response.data.jwtToken);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"userId\", response.data.user_data.id);\r\n\t\t\t\t\t\t\tnavigate(\"/\");\r\n\t\t\t\t\t\t\tshowNotification({\r\n\t\t\t\t\t\t\t\tmessage: \"정상적으로 회원가입되었습니다.\",\r\n\t\t\t\t\t\t\t\tautoClose: 2000,\r\n\t\t\t\t\t\t\t\tradius: \"md\",\r\n\t\t\t\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t} else if (platform === \"naver\") {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.post(API_URL + \"/auth/naverSignUp\", naverBody)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tif (response.data.RESULT === 200) {\r\n\t\t\t\t\t\t\tsetJwtToken(response.data.jwtToken);\r\n\t\t\t\t\t\t\tsetUserInfo(response.data.user_data);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"Authentication\", response.data.jwtToken);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"userId\", response.data.user_data.id);\r\n\t\t\t\t\t\t\tnavigate(\"/\");\r\n\t\t\t\t\t\t\tshowNotification({\r\n\t\t\t\t\t\t\t\tmessage: \"정상적으로 회원가입되었습니다.\",\r\n\t\t\t\t\t\t\t\tautoClose: 2000,\r\n\t\t\t\t\t\t\t\tradius: \"md\",\r\n\t\t\t\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnicknameInput.current.focus();\r\n\t\t\tshowNotification({\r\n\t\t\t\tmessage: \"닉네임 중복체크를 해주세요.\",\r\n\t\t\t\tautoClose: 2000,\r\n\t\t\t\tradius: \"md\",\r\n\t\t\t\tcolor: \"red\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"regist-container\">\r\n\t\t\t<div className=\"regist-form-group\">\r\n\t\t\t\t<div className=\"regist-title\">\r\n\t\t\t\t\t<Logo />\r\n\t\t\t\t\t<h3>회원가입</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"regist-form\">\r\n\t\t\t\t\t<div className=\"regist-input\">\r\n\t\t\t\t\t\t<Input.Wrapper label=\"이메일\" required>\r\n\t\t\t\t\t\t\t<Input defaultValue={account.email} disabled />\r\n\t\t\t\t\t\t</Input.Wrapper>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"regist-input\">\r\n\t\t\t\t\t\t<Input.Wrapper label=\"닉네임\" required>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<span style={{ fontSize: \"12px\" }}>({nickName.length}/8자)</span>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tmaxLength={8}\r\n\t\t\t\t\t\t\t\tplaceholder=\"닉네임을 입력하세요.\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChangeHandler(e, \"nickname\")}\r\n\t\t\t\t\t\t\t\tdefaultValue={nickName}\r\n\t\t\t\t\t\t\t\tref={nicknameInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Input.Wrapper>\r\n\t\t\t\t\t\t<div className=\"nickname-check\">\r\n\t\t\t\t\t\t\t{nicknameChecked === \"empty\" ? (\r\n\t\t\t\t\t\t\t\t<span className=\"unavailable\">닉네임을 입력해주세요.</span>\r\n\t\t\t\t\t\t\t) : nicknameChecked === \"available\" ? (\r\n\t\t\t\t\t\t\t\t<span className=\"available\">사용할 수 있는 닉네임입니다.</span>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<span className=\"unavailable\">이미 사용중인 닉네임입니다.</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<button onClick={(e) => onClickNicknameCheck(e)}>중복체크</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"regist-input\">\r\n\t\t\t\t\t\t<Input.Wrapper label=\"나이\" required>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tplaceholder=\"본인 연령대를 선택하세요.\"\r\n\t\t\t\t\t\t\t\tdata={AGE_RANGE}\r\n\t\t\t\t\t\t\t\tdefaultValue={ageRange}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChangeHandler(e, \"age\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Input.Wrapper>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"regist-input\">\r\n\t\t\t\t\t\t<Input.Wrapper label=\"성별\" required>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tplaceholder=\"성별을 선택하세요.\"\r\n\t\t\t\t\t\t\t\tdata={GENDER}\r\n\t\t\t\t\t\t\t\tdefaultValue={gender}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChangeHandler(e, \"gender\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Input.Wrapper>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"regist-btn\">\r\n\t\t\t\t\t<button onClick={(e) => onClickSignup(e, platform)}>\r\n\t\t\t\t\t\t회원가입하기\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RegistPage;\r\n","// npm package\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// components\r\nimport RegistPage from \"../RegistPage\";\r\n\r\nconst NaverRegist = () => {\r\n\tconst { state } = useLocation();\r\n\tconst naverAccount = state.data;\r\n\tconst platform = state.platform;\r\n\r\n\t/**\r\n\t * 네이버 액세스 토큰\r\n\t * 네이버 회원 정보\r\n\t */\r\n\tconst naverToken = naverAccount.access_token;\r\n\tconst naverId = naverAccount.id;\r\n\r\n\treturn (\r\n\t\t<RegistPage\r\n\t\t\tplatform={platform}\r\n\t\t\taccount={naverAccount}\r\n\t\t\ttoken={naverToken}\r\n\t\t\tid={naverId}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default NaverRegist;\r\n"],"names":["AGE_RANGE","value","label","GENDER","props","navigate","useNavigate","nicknameInput","useRef","platform","account","token","id","email","profileImage","profile","thumbnail_image_url","profile_image","useState","age_range","age","replace","ageRange","setAgeRange","gender","setGender","useRecoilState","jwtTokenState","setJwtToken","userInfoState","setUserInfo","nickName","setNickName","nicknameChecked","setNicknameChecked","onChangeHandler","e","state","target","nicknameBody","nickname","kakaoBody","kakaoToken","naverBody","naverToken","className","Input","I","required","defaultValue","disabled","style","fontSize","length","maxLength","placeholder","onChange","ref","onClick","axios","API_URL","then","response","data","RESULT","Select","jwtToken","user_data","localStorage","setItem","showNotification","message","autoClose","radius","color","current","focus","onClickSignup","useLocation","naverAccount","access_token","naverId"],"sourceRoot":""}