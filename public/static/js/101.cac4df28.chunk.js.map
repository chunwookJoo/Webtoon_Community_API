{"version":3,"file":"static/js/101.cac4df28.chunk.js","mappings":"+SAOA,EAJYA,IAAAA,OAAa,CACxBC,QAASC,EAAAA,KCFJC,EAAc,yCAAG,WAAOC,EAAUC,EAAOC,GAAI,sFAC3CC,GAAW,IAAIC,MAAOC,SAEtBC,EADO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACR,IAAbH,EAAiB,EAAIA,EAAW,GACnDI,EAAe,GACfC,EAAW,GAAG,EAAD,GAETR,EAAQ,OACT,MADS,KACN,EAGH,eAHG,KAGS,mBAFO,OAAtBO,EAAe,OAAO,6BAGO,OAA7BA,EAAe,cAAc,6BAG7BA,EAAeP,EAAS,SAG3BC,EAAMQ,OAASR,EAAMQ,KAAOH,GAAW,KAChCL,EAAMQ,KAAI,OACX,QADW,KACN,GAGL,QAHK,KAGA,oBAFwB,OAAhCD,EAAQ,wBAAoB,GAAI,6BAGL,OAA3BA,EAAQ,mBAAe,GAAI,6BAG3BA,EAAQ,oBAAgBP,EAAMQ,MAAO,mCAIhBC,EAAAA,IAAQ,OAAD,OAAQH,GAAY,OAAGC,EAAQ,iBAASN,IAAQ,KAAD,GAAjE,OAAiE,SAArES,EAAI,EAAJA,KAAI,kBACLA,GAAI,yCAEL,IAAIC,MAAM,6DAAgB,KAAD,sDAElC,gBApCmB,0C,SCiEpB,EAnDoB,WAClB,OAA2BC,EAAAA,EAAAA,MAArBC,EAAM,EAANA,OAAQd,EAAQ,EAARA,SACd,GAAsCe,EAAAA,EAAAA,UAAS,IAAG,eAA3CC,EAAW,KAAEC,EAAc,KAClC,GAAiCC,EAAAA,EAAAA,MAAW,eAArCC,EAAO,KAAEC,EAAa,KAEzBlB,GAAOmB,EAAAA,EAAAA,QAAO,GACdC,GAAWD,EAAAA,EAAAA,SAAO,GAChBpB,EAAQsB,IAAAA,MAAST,EAAQ,CAAEU,mBAAmB,IAE9CC,EAAgB,yCAAG,2FACc,OAAjCL,IAAelB,EAAKwB,SAAW,GAAE,SAClB3B,EAAeC,EAAUC,EAAOC,EAAKwB,SAAS,KAAD,EAAtD,OAAJf,EAAI,gBACgBA,EAAKgB,KAAI,SAACC,GAAO,OAAK,SAACC,EAAA,QAAO,CAACC,YAAaF,GAAW,IAAE,KAAD,EAA5EG,EAAW,OACjBd,GAAe,SAACe,GAAI,wBAASA,GAAI,CAAED,GAAc,IACjDT,EAASI,SAAU,EAAK,2CACzB,kBANqB,mCAyBtB,OAhBAO,EAAAA,EAAAA,YAAU,YACR,uBAAC,mFACC/B,EAAKwB,QAAU,EACfT,EAAe,IACfiB,OAAOC,SAAS,EAAG,GACnBV,IAAmB,0CAJrB,EAMF,GAAG,CAACxB,EAAMQ,KAAMT,KAGhBiC,EAAAA,EAAAA,YAAU,WACJb,GAAiBE,EAASI,SAC5BD,GAEJ,GAAG,CAACL,KAGF,6BACE,oBAASgB,UAAU,wBACnB,qBAASA,UAAU,qBAAoB,WACrC,eAAIA,UAAU,eAAc,SAAEpB,KAC9B,gBAAKqB,IAAKlB,IAEc,IAAvBH,EAAYsB,SACX,gBAAKF,UAAU,UAAS,UACtB,SAACG,EAAA,EAAO,WAMpB,C","sources":["api/api.js","api/webtoon.js","pages/WebtoonPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_URL } from \"../config\";\r\n\r\nconst api = axios.create({\r\n\tbaseURL: API_URL,\r\n});\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst getWebtoonList = async (pathname, query, page) => {\r\n  const todayNum = new Date().getDay();\r\n  const week = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\r\n  const todayWeek = week[todayNum === 0 ? 6 : todayNum - 1];\r\n  let PLATFORM_URL = \"\";\r\n  let WEEK_URL = \"\";\r\n\r\n  switch (pathname) {\r\n    case \"/\":\r\n      PLATFORM_URL = \"/all\";\r\n      break;\r\n    case \"/kakaoPage\":\r\n      PLATFORM_URL = \"/kakao-page\";\r\n      break;\r\n    default:\r\n      PLATFORM_URL = pathname;\r\n  }\r\n\r\n  !query.week && (query.week = todayWeek);\r\n  switch (query.week) {\r\n    case \"fin\":\r\n      WEEK_URL = `/finished?day=${7}`;\r\n      break;\r\n    case \"new\":\r\n      WEEK_URL = `/new?day=${8}`;\r\n      break;\r\n    default:\r\n      WEEK_URL = `/week?day=${query.week}`;\r\n  }\r\n\r\n  try {\r\n    const { data } = await api.get(`/api${PLATFORM_URL}${WEEK_URL}&page=${page}`);\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(\"웹툰 리스트 출력 에러\");\r\n  }\r\n};\r\n\r\nexport { getWebtoonList };\r\n","// npm package\r\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport qs from \"qs\";\r\n\r\n// components\r\nimport Loading from \"../components/Loading\";\r\nimport Webtoon from \"../components/Webtoon\";\r\n\r\n// hooks\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\n// icon\r\nimport \"../assets/scss/pages/webtoonPage.scss\";\r\nimport { getWebtoonList } from \"../api/webtoon\";\r\n\r\nconst WebtoonPage = () => {\r\n  let { search, pathname } = useLocation();\r\n  const [webtoonList, setWebtoonList] = useState([]);\r\n  const [moreRef, isMoreRefShow] = useInView();\r\n\r\n  let page = useRef(1);\r\n  let didMount = useRef(false);\r\n  const query = qs.parse(search, { ignoreQueryPrefix: true });\r\n\r\n  const fetchWebtoonList = async () => {\r\n    if (isMoreRefShow) page.current += 1;\r\n    const data = await getWebtoonList(pathname, query, page.current);\r\n    const WebtoonList = await data.map((webtoon) => <Webtoon webtoonData={webtoon} />);\r\n    setWebtoonList((prev) => [...prev, WebtoonList]);\r\n    didMount.current = true;\r\n  };\r\n\r\n  // 요일, 플랫폼 변경 감지\r\n  useEffect(() => {\r\n    (async () => {\r\n      page.current = 1;\r\n      setWebtoonList([]);\r\n      window.scrollTo(0, 0);\r\n      fetchWebtoonList();\r\n    })();\r\n  }, [query.week, pathname]);\r\n\r\n  // 스크롤 위치 감지\r\n  useEffect(() => {\r\n    if (isMoreRefShow && didMount.current) {\r\n      fetchWebtoonList();\r\n    }\r\n  }, [isMoreRefShow]);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"contents-container\"></section>\r\n      <section className=\"contents-container\">\r\n        <ul className=\"webtoon-list\">{webtoonList}</ul>\r\n        <div ref={moreRef}></div>\r\n\r\n        {webtoonList.length === 0 && (\r\n          <div className=\"loading\">\r\n            <Loading />\r\n          </div>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default WebtoonPage;\r\n"],"names":["axios","baseURL","API_URL","getWebtoonList","pathname","query","page","todayNum","Date","getDay","todayWeek","PLATFORM_URL","WEEK_URL","week","api","data","Error","useLocation","search","useState","webtoonList","setWebtoonList","useInView","moreRef","isMoreRefShow","useRef","didMount","qs","ignoreQueryPrefix","fetchWebtoonList","current","map","webtoon","Webtoon","webtoonData","WebtoonList","prev","useEffect","window","scrollTo","className","ref","length","Loading"],"sourceRoot":""}