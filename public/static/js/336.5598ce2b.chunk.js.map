{"version":3,"file":"static/js/336.5598ce2b.chunk.js","mappings":"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","sources":["components/WebtoonInfoDetail.js","pages/board/BoardDetail.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst WebtoonInfoDetail = (props) => {\r\n\tconst { webtoon } = props;\r\n\tconst platform =\r\n\t\twebtoon.service === \"naver\"\r\n\t\t\t? \"네이버 웹툰\"\r\n\t\t\t: webtoon.service === \"kakao\"\r\n\t\t\t? \"카카오 웹툰\"\r\n\t\t\t: \"카카오페이지 웹툰\";\r\n\r\n\tconst week = [\r\n\t\t\"월요일\",\r\n\t\t\"화요일\",\r\n\t\t\"수요일\",\r\n\t\t\"목요일\",\r\n\t\t\"금요일\",\r\n\t\t\"토요일\",\r\n\t\t\"일요일\",\r\n\t\t\"완결\",\r\n\t\t\"신작\",\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"webtoon-img\">\r\n\t\t\t\t<img src={webtoon.img} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"webtoon-title\">\r\n\t\t\t\t<h3>{webtoon.title}</h3>\r\n\t\t\t\t<h5>\r\n\t\t\t\t\t{webtoon.author} | {platform}\r\n\t\t\t\t</h5>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"webtoon-week\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{webtoon.week.map((item, index) => {\r\n\t\t\t\t\t\treturn <li key={index}>{week[item]}</li>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WebtoonInfoDetail;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { boardDataState, userInfoState } from \"../../utils/atom\";\r\nimport { Input } from \"@mantine/core\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport WebtoonInfoDetail from \"../../components/WebtoonInfoDetail\";\r\nimport \"../../assets/scss/pages/board/boardDetail.scss\";\r\nimport { showNotification } from \"@mantine/notifications\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Comments = (props) => {\r\n\tconst [boardData, setBoardData] = useRecoilState(boardDataState);\r\n\tconst [commentData, setCommentData] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.get(API_URL + `/comment/${boardData._id}`).then((response) => {\r\n\t\t\tsetCommentData(response.data);\r\n\t\t});\r\n\t}, [props.commentState]);\r\n\r\n\treturn (\r\n\t\t<div className=\"comment-lists\">\r\n\t\t\t{commentData?.length === 0 ? (\r\n\t\t\t\t<h6 style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>\r\n\t\t\t\t\t아직 댓글이 없습니다. <br />첫 댓글을 작성해보세요.\r\n\t\t\t\t</h6>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{commentData?.map((item, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={index} className=\"comment\">\r\n\t\t\t\t\t\t\t\t<div className=\"comment-user\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"comment-img\">\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={item?.author.profileImage}\r\n\t\t\t\t\t\t\t\t\t\t\twidth={24}\r\n\t\t\t\t\t\t\t\t\t\t\theight={24}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<div className=\"nickname\">\r\n\t\t\t\t\t\t\t\t\t\t<h5>{item?.author.nickname}</h5>\r\n\t\t\t\t\t\t\t\t\t\t<span>{item?.createdAt.split(\"T\")[0]}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"comment-des\">{item?.comment}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst EditWebtoonComment = () => {\r\n\tconst commentInput = useRef();\r\n\tconst [userInfo, setUserInfo] = useRecoilState(userInfoState);\r\n\tconst [boardData, setBoardData] = useRecoilState(boardDataState);\r\n\tconst [comment, setComment] = useState(\"\");\r\n\tconst [commentState, setCommentState] = useState();\r\n\r\n\tconst today = new Date();\r\n\tconst year = today.getFullYear();\r\n\tconst month = (\"0\" + (today.getMonth() + 1)).slice(-2);\r\n\tconst day = (\"0\" + today.getDate()).slice(-2);\r\n\tconst dateString = year + \"-\" + month + \"-\" + day;\r\n\r\n\tconst commentBody = {\r\n\t\tboard_id: boardData._id,\r\n\t\tcomment,\r\n\t\tauthor: userInfo._id,\r\n\t\tcreatedAt: dateString,\r\n\t};\r\n\r\n\tconst onClickCreateComment = () => {\r\n\t\tif (comment === \"\") {\r\n\t\t\tshowNotification({\r\n\t\t\t\tmessage: \"댓글을 입력해주세요.\",\r\n\t\t\t\tautoClose: 1500,\r\n\t\t\t\tradius: \"md\",\r\n\t\t\t\tcolor: \"yellow\",\r\n\t\t\t});\r\n\t\t\tcommentInput.current.focus();\r\n\t\t} else {\r\n\t\t\taxios.post(API_URL + \"/comment/insert\", commentBody).then((response) => {\r\n\t\t\t\tif (response.data.RESULT === 200) {\r\n\t\t\t\t\tsetComment(\"\");\r\n\t\t\t\t\tsetCommentState(response.data);\r\n\t\t\t\t\tshowNotification({\r\n\t\t\t\t\t\tmessage: \"댓글을 정상적으로 등록했어요.\",\r\n\t\t\t\t\t\tautoClose: 1500,\r\n\t\t\t\t\t\tradius: \"md\",\r\n\t\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<section className=\"webtoon-review\">\r\n\t\t\t<div>\r\n\t\t\t\t<hr />\r\n\t\t\t</div>\r\n\t\t\t<Comments commentState={commentState} />\r\n\t\t\t<div className=\"comment-container\">\r\n\t\t\t\t<span className=\"comment-img\">\r\n\t\t\t\t\t<img src={userInfo.profileImage} width={28} height={28} />\r\n\t\t\t\t</span>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tref={commentInput}\r\n\t\t\t\t\tvalue={comment}\r\n\t\t\t\t\tonChange={(e) => setComment(e.target.value)}\r\n\t\t\t\t\tclassName=\"comment-input\"\r\n\t\t\t\t\tplaceholder=\"댓글을 남겨주세요.\"\r\n\t\t\t\t\tradius=\"lg\"\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"comment-btn\">\r\n\t\t\t\t\t<button onClick={onClickCreateComment}>등록</button>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nconst BoardDetail = () => {\r\n\tconst { state } = useLocation(); // board_id\r\n\tconst [boardData, setBoardData] = useRecoilState(boardDataState);\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\taxios.get(API_URL + `/api/board/${state}`).then((response) => {\r\n\t\t\tsetBoardData(response.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"board-detail-global\">\r\n\t\t\t{boardData.length === 0 ? (\r\n\t\t\t\t\"\"\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<section className=\"board-title-container\">\r\n\t\t\t\t\t\t<h1>{boardData.title}</h1>\r\n\t\t\t\t\t\t<div className=\"creater\">\r\n\t\t\t\t\t\t\t<span className=\"board-author-img\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={boardData.author.profileImage}\r\n\t\t\t\t\t\t\t\t\twidth={30}\r\n\t\t\t\t\t\t\t\t\theight={30}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"nickname\">{boardData.author.nickname}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"webtoon-detail-container\">\r\n\t\t\t\t\t\t<WebtoonInfoDetail webtoon={boardData.webtoon} />\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"board-description-container\">\r\n\t\t\t\t\t\t<div>{boardData.description}</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<EditWebtoonComment />\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoardDetail;\r\n"],"names":["props","webtoon","platform","service","week","className","src","img","title","author","map","item","index","Comments","useRecoilState","boardDataState","boardData","useState","commentData","setCommentData","useEffect","axios","API_URL","_id","then","response","data","commentState","length","style","textAlign","paddingTop","profileImage","width","height","nickname","createdAt","split","comment","EditWebtoonComment","commentInput","useRef","userInfoState","userInfo","setComment","setCommentState","today","Date","dateString","getFullYear","getMonth","slice","getDate","commentBody","board_id","Input","I","ref","value","onChange","e","target","placeholder","radius","onClick","showNotification","message","autoClose","color","current","focus","RESULT","state","useLocation","setBoardData","window","scrollTo","WebtoonInfoDetail","description"],"sourceRoot":""}