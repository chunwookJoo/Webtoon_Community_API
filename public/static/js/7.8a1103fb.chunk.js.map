{"version":3,"file":"static/js/7.8a1103fb.chunk.js","mappings":"mSAsEA,EAtDoB,WAClB,OAA2BA,EAAAA,EAAAA,MAArBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SACd,GAAsCC,EAAAA,EAAAA,UAAS,IAAG,eAA3CC,EAAW,KAAEC,EAAc,KAClC,GAAiCC,EAAAA,EAAAA,MAAW,eAArCC,EAAO,KAAEC,EAAa,KAEzBC,GAAOC,EAAAA,EAAAA,QAAO,GAEdC,GAAWD,EAAAA,EAAAA,SAAO,GAChBE,EAAQC,IAAAA,MAASZ,EAAQ,CAAEa,mBAAmB,IAE9CC,EAAgB,yCAAG,2FACc,OAAjCP,IAAeC,EAAKO,SAAW,GAAE,UAClBC,EAAAA,EAAAA,IAAef,EAAUU,EAAOH,EAAKO,SAAS,KAAD,EAAtD,OAAJE,EAAI,gBACgBA,EAAKC,KAAI,SAACC,GAAO,OACzC,SAACC,EAAA,QAAO,CAAmBC,YAAaF,GAA1BA,EAAQG,IAA6B,IAClD,KAAD,EAFIC,EAAW,OAGjBnB,GAAe,SAACoB,GAAI,wBAASA,GAAI,CAAED,GAAc,IACjDb,EAASK,SAAU,EAAK,2CACzB,kBARqB,mCA2BtB,OAhBAU,EAAAA,EAAAA,YAAU,YACR,uBAAC,mFACCjB,EAAKO,QAAU,EACfX,EAAe,IACfsB,OAAOC,SAAS,EAAG,GACnBb,IAAmB,0CAJrB,EAMF,GAAG,CAACH,EAAMiB,KAAM3B,KAGhBwB,EAAAA,EAAAA,YAAU,WACJlB,GAAiBG,EAASK,SAC5BD,GAEJ,GAAG,CAACP,KAGF,6BACE,oBAASsB,UAAU,wBACnB,qBAASA,UAAU,qBAAoB,WACrC,eAAIA,UAAU,eAAc,SAAE1B,KAC9B,gBAAK2B,IAAKxB,IAEc,IAAvBH,EAAY4B,SACX,gBAAKF,UAAU,UAAS,UACtB,SAACG,EAAA,EAAO,WAMpB,C","sources":["pages/WebtoonPage.jsx"],"sourcesContent":["// npm package\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport qs from \"qs\";\r\n\r\n// components\r\nimport Loading from \"../components/Loading\";\r\nimport Webtoon from \"../components/Webtoon\";\r\n\r\n// hooks\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\n// icon\r\nimport \"../assets/scss/pages/webtoonPage.scss\";\r\nimport { getWebtoonList } from \"../api/webtoon\";\r\n\r\nconst WebtoonPage = () => {\r\n  let { search, pathname } = useLocation();\r\n  const [webtoonList, setWebtoonList] = useState([]);\r\n  const [moreRef, isMoreRefShow] = useInView();\r\n\r\n  let page = useRef(1);\r\n\r\n  let didMount = useRef(false);\r\n  const query = qs.parse(search, { ignoreQueryPrefix: true });\r\n\r\n  const fetchWebtoonList = async () => {\r\n    if (isMoreRefShow) page.current += 1;\r\n    const data = await getWebtoonList(pathname, query, page.current);\r\n    const WebtoonList = await data.map((webtoon) => (\r\n      <Webtoon key={webtoon._id} webtoonData={webtoon} />\r\n    ));\r\n    setWebtoonList((prev) => [...prev, WebtoonList]);\r\n    didMount.current = true;\r\n  };\r\n\r\n  // 요일, 플랫폼 변경 감지\r\n  useEffect(() => {\r\n    (async () => {\r\n      page.current = 1;\r\n      setWebtoonList([]);\r\n      window.scrollTo(0, 0);\r\n      fetchWebtoonList();\r\n    })();\r\n  }, [query.week, pathname]);\r\n\r\n  // 스크롤 위치 감지\r\n  useEffect(() => {\r\n    if (isMoreRefShow && didMount.current) {\r\n      fetchWebtoonList();\r\n    }\r\n  }, [isMoreRefShow]);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"contents-container\"></section>\r\n      <section className=\"contents-container\">\r\n        <ul className=\"webtoon-list\">{webtoonList}</ul>\r\n        <div ref={moreRef}></div>\r\n\r\n        {webtoonList.length === 0 && (\r\n          <div className=\"loading\">\r\n            <Loading />\r\n          </div>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default WebtoonPage;\r\n"],"names":["useLocation","search","pathname","useState","webtoonList","setWebtoonList","useInView","moreRef","isMoreRefShow","page","useRef","didMount","query","qs","ignoreQueryPrefix","fetchWebtoonList","current","getWebtoonList","data","map","webtoon","Webtoon","webtoonData","_id","WebtoonList","prev","useEffect","window","scrollTo","week","className","ref","length","Loading"],"sourceRoot":""}